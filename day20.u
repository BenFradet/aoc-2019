> input20 |> Text.toCharList |> parseInput |> walk

---
input20 = "                                       L N           Q     O     W   M       F                                        #
                                       W G           V     W     F   Q       F                                        #
  #####################################.#.###########.#####.#####.###.#######.####################################### #
  #.......#.#...........#...#.#.#.......#.....#.....#.....#.....#.#...#.....#.........#...#.....#.#.#.#...#.....#.#.# #
  #.#####.#.###########.###.#.#.###.#########.###.#####.#######.#.###.#.#.#####.#######.###.#####.#.#.#.###.#####.#.# #
  #...#.#.#...#.#.#.#...#...............#.....#.........#.....#.#.#.....#.#.............#.......#.#...#.#.....#.#...# #
  ###.#.#####.#.#.#.###.###.#.#########.###.#####.#########.#.#.#.#######.###.#####.#######.#####.#.###.###.#.#.#.### #
  #.#.#.........#...........#...#.......#.......#...#.......#...#.#...#.....#.#.#.#.#.#.#.....#.#.#...#...#.#.#.#.#.# #
  #.#.###.#.###.###.#.#.#####.#####.###.#######.###.#######.#.###.#.#######.#.#.#.###.#.###.###.#.#.###.#.#.###.#.#.# #
  #.....#.#...#.....#.#.#...#.#.....#.....#...#.#...#...#...#.#.......#.....#.........................#.#.#...#.#...# #
  #.#.#########.###.###.###.###.###.#######.#.#.###.#.#.#.#########.#####.###.###.#.#.###.#.#######.###.###.###.#.### #
  #.#.#.#.......#...#...#.......#.......#...#.....#...#.#.#.......#.#...#...#.#.#.#.#...#.#.#.#...#.........#.....#.# #
  ###.#.#.#.###.###########.#######.#.###.###.#########.#.#.###.###.###.###.#.#.#############.###.#####.###.###.###.# #
  #.#.#.#.#...#.#...........#...#...#.#.....#.#.#...#...#.....#.#...#.......#.......#.#.#.....#.#.....#.#.#.#.#.#...# #
  #.#.#.###.###.#.#####.###.###.###.#####.#####.#.#.#.#########.#.#####.###.###.#####.#.#.#####.###.#####.###.#.#.### #
  #.#...#...#...#.....#.#...#.........#.#.......#.#.....#.......#.#.....#.#...#.....#.#.#...........#...#.#.#.....#.# #
  #.#.#.###########.###########.#.#.###.###.#####.###.###.#######.###.###.#.###.#####.#.#.###.###.#.#.###.#.###.###.# #
  #...#.#.......#.....#.........#.#.....#.....#.#.#...#.......#...#.#.#.#.#.#.....#...#...#.....#.#.......#.#.....#.# #
  ###.###.#.#######.###.###.#.###.###.###.#####.#.###.#####.#.###.#.#.#.#.###.#####.###.#.#######.#########.###.###.# #
  #...#...#.#.......#...#...#.#.....#.#.#...#.....#.....#...#.#.....#...#...#...#.#.....#.......#...#.#.#.#.#.#.#.#.# #
  ###.###.#####.###.#########.#######.#.#.#######.#######.#.#######.#.#####.#.###.#.#################.#.#.#.#.#.#.#.# #
  #...#.#...#.#.#.#.#...#.#.#.#.#.......#.#.#.....#.#...#.#...#.....#.#.#.............#...#.#.....#.......#.#.#.#...# #
  ###.#.#.###.###.#.###.#.#.###.###.###.#.#.#####.#.###.###.#####.#.#.#.###.#######.###.###.#.###.#.#.#.###.#.#.#.### #
  #.#.#.#.#.#.....#.#.......#...#.#.#...#.#.#.#.......#.#...#.....#.#...#.#.#...#.....#.#.......#.#.#.#...#.....#.#.# #
  #.#.#.#.#.###.###########.###.#.#.#####.#.#.#.###.###.#.#######.###.###.#.###.#.###.#.#.#.###.#######.###.#.#.#.#.# #
  #.....#.........#.#.#...............#.....#.#.#...#...........#...#...#.#.#.....#.#.#.#.#.#.........#...#.#.#...#.# #
  #.#####.#.#######.#.#######.###.###.#####.#.###.#######.#.#.###.###.###.#####.#.#.###.#.#.###.###.#####.#####.###.# #
  #...#...#.....#.......#.....#...#.#...#...#.........#.#.#.#.#.....#.........#.#.........#...#...#.#.......#...#.#.# #
  #.#######.#######.###.###.###.###.#.#####.#######.###.#.#######.###.#############.#######.#########.#######.###.#.# #
  #...#.....#.#.....#...#.#.#...#.#.#.....#.#.......#.#.........#.#.#.....#.......#.#.#...#...#.#...#...#.#...#.#.#.# #
  ###.###.###.#####.#####.#######.#.#.###.#.#####.###.#####.#.###.#.###.#####.###.#.#.#.#######.###.#.#.#.###.#.#.#.# #
  #.....#.#...#.....#.....#.............#.#.....#.........#.#.#.....#.....#.....#.......#.#...#...#.#.#...#...#.#...# #
  ###.#.#.#.#.#####.#####.#.###.#######.#####.#######.#######.#####.###.#####.###########.#.#####.#.###.#.#.###.###.# #
  #...#.#...#.....#.#.#...#.#.#.#      P     Q       O       P     F   A     M        #...#...#.......#.#.#.#.......# #
  ###.#####.###.###.#.#.#####.###      C     V       W       B     F   Y     P        ###.#.#####.#######.#.###.###.# #
  #...#.#...#.#.#...#.#.#...#...#                                                     #.....#.....#.#.#...#...#.#....PB
  ###.#.#.###.#####.#.#.###.#.###                                                     #.###.###.###.#.#.###.#####.#.# #
  #.#.........#.#.#.............#                                                   MQ..#...........#.#.....#.....#..AA
  #.#.#####.###.#.#####.#.#######                                                     #.#.###.#.#.###.#####.#.###.### #
GG....#.#...#...#.....#.#.....#.#                                                     #.#.#...#.#.....#.#.#.#.#.#.#.# #
  #.###.#####.#####.#####.#####.#                                                     ###.#######.#####.#.#.###.#.#.# #
  #...#...#.#.#.....#.#...#......LE                                                   #.#.#...#.#...................# #
  #.#####.#.#.###.###.#.#.#.#.#.#                                                     #.###.###.##################### #
SS..#.....#...#...#.....#...#.#..EC                                                 LJ..#...........#...#...#.......# #
  #.#.#.###.#.###.###.###.#######                                                     #.#.#.#####.#.#.#.#.###.#.##### #
  #...#.....#.........#.#.#.....#                                                     #...#.#.#...#...#...#...#.#....PC
  #####################.###.#.###                                                     #.#####.#####.#.###.#.#.#.###.# #
  #.......#...#.........#.#.#...#                                                     #.....#...#...#.#...#.#.#.#...# #
  ###.###.#.#.#.###.#.#.#.###.#.#                                                     #.#####.#.#####.###.#.###.#.### #
  #.#.#...#.#...#...#.#.#...#.#.#                                                     #...#.#.#...#...#.....#.....#.# #
  #.#.#.###.#.#.#####.###.###.#.#                                                     #####.#.#######.#.###.#####.#.# #
NW....#...#.#.#.....#.#...#.#.#.#                                                   NW....#.#...#.....#.#...#.#...#.# #
  #.#.###.#.#.###.###.###.#.#.#.#                                                     #.###.#.#.###.#.#.#.#.#.#.#.#.# #
  #.#.#.....#.#.#.#.#.........#..BB                                                   #.#.#.#.#.#.#.#.#.#.#.#.#.#.#..LE
  ###.#########.###.#############                                                     #.#.#.#.###.###########.#####.# #
  #.#.#...................#......LV                                                   #...........#.#...#.#...#.#.#.# #
  #.#####.#######.#####.###.#####                                                     #####.#####.#.###.#.#.###.#.#.# #
LB............#...#.#...#...#...#                                                     #...#.#.#.....................# #
  #.#####.#.#.###.#.###.###.#.#.#                                                     #.#####.###.################### #
  #...#...#.#...#.#.#.#.#.#...#.#                                                   UJ........#.#.#.....#...#.......# #
  #.#####.###.###.#.#.#.#.#####.#                                                     #.###.#.#.###.###.#.#.#.###.#.# #
  #...#.....#.#...#.#.#.........#                                                     #...#.#.........#...#.....#.#.# #
  ###.#.#######.###.#.#######.#.#                                                     #.###.#####.###.#.#.#######.#.# #
  #...#.#.#...#.#.#.......#...#.#                                                     #...#.#.#...#...#.#.#...#.#.#..BB
  #.#.###.#.#####.#.#.###.#######                                                     #######.#######.#.#####.#.##### #
  #.#...#.#.#.#.#.#.#...#...#....GG                                                 JY..#...........#.#...#.....#....CD
  #######.#.#.#.#.#.#####.#####.#                                                     #.###.###.###.#########.#.###.# #
AY..#.#...#.#.#.......#...#.#...#                                                     #.#.#.#.....#.#.#.#.....#.#...# #
  #.#.###.#.#.#.#.#.#####.#.#.###                                                     #.#.#.#####.###.#.###.#.#.#.#.# #
  #.............#.#...#.#.....#.#                                                     #.......#...#.....#.#.#.#...#.# #
  ###########.#####.###.#.#.###.#                                                     #####.###.#####.###.###.###.### #
  #.........#...#...#...#.#.#.#.#                                                     #.#...#.................#.#.#.# #
  #####.###.#########.#######.#.#                                                     #.#######.#.#.#####.#####.#.#.# #
  #.....#...#.#.#.#.....#...#.#..LB                                                   #...#.#.#.#.#...#.....#...#.#.# #
  #.#.#.#.###.#.#.###.#####.#.#.#                                                     #.#.#.#.#####.#####.###.#.###.# #
DD..#.#.#.#...#...#.#.#.......#.#                                                     #.#.........#.#.#...#.#.#.#...# #
  #.#####.#.#.#.###.#.###.###.#.#                                                     #.###.#########.#####.#.#.#.#.# #
  #...#.....#...............#...#                                                   DD..#.....#.#.#.#.#.....#.#.#.#..UJ
  ###.###########################                                                     ###.#####.#.#.#.#.#.###.#.#.### #
  #.#.#...#.........#...........#                                                     #.................#.....#.....# #
  #.###.#.#.#######.#.#####.#####                                                     #.#.#.#.###############.####### #
  #.....#...#...#...#.#.#...#....GK                                                   #.#.#.#.#.........#.#.#.#.....# #
  #.#.#########.###.#.#.#.###.###                                                     #########.#####.###.#.###.###.# #
  #.#.....#.............#.....#.#                                                   LW..#...#.....#.........#...#....LV
  #.###.#.###.#.#.#.###.#.#.#.#.#                                                     #.#.###.#.#.###.#.###.#.###.### #
JY..#.#.#...#.#.#.#...#.#.#.#...#                                                     #.....#.#.#...#.#.#...#.#...#..ZZ
  #.#.###.###.#.###.###.###.#####                                                     #.###.#.###.#######.###.#.###.# #
  #.....#.#.#.#...#...#...#.....#                                                     #...#.....#.#...........#.....# #
  #.#.#####.#.#####.###.###.#.###      A       N           C       S X     W          #.#####.#######.#.###.#.#####.# #
  #.#...#.....#.......#...#.#.#.#      L       G           D       S Z     F          #.#...........#.#.#...#.#.....# #
  ###.###.#.#.###.#.###.#.###.#.#######.#######.###########.#######.#.#####.###########.###.#.#.#.###.#.###.#######.# #
  #.....#.#.#.#...#.#...#.#.....#...........#.........#...#.#.......#.....#.....#...#.#...#.#.#.#.#.#.#.#.....#.#...# #
  ###.#.#####.#.###.#.#.#.###.#.#.#.###.###.###.###.###.###.#.###########.#.#####.###.###.###.#####.###.###.#.#.###.# #
  #...#...#...#...#.#.#.#.#...#.#.#...#...#.#.#.#...#.......#...........#.#.#.#.......#.....#...#.......#...#...#...# #
  ###.#######.#.#.###.###.###.#########.###.#.#####.###.###.#.#.#.###.###.#.#.#.#.#.#.#######.#########.###.#.#####.# #
  #.#...#...#.#.#.#...#.#.#.........#.#.#.....#.#.#.#.....#.#.#.#.#.#...#.#.....#.#.#.#.......#...........#.#.#.....# #
  #.#.#####.#.###.#.#.#.#############.#####.###.#.#.#.#######.#####.#####.#####.#########.#.#.#########.###.#######.# #
  #.......#.....#.#.#.#.#...#.#.#.#...#.#.......#...#...#.#.#...#.........#.............#.#.#.#...#.......#...#.#...# #
  ###.#####.#####.#####.###.#.#.#.###.#.#.###.#####.#.#.#.#.#.###########.#.#############.#.#.###.###.###.###.#.#.#.# #
  #.....#.......#.#.......#.......#.........#.#.#...#.#...#.........#.....#...........#.#.#.#.#.#.....#.#.#...#...#.# #
  ###.###.#.###.#.###.#######.###.#.#######.###.###.###.#########.#######.###.#########.#####.#.#.#.#.#.###.###.#.#.# #
  #.....#.#.#.#.#.#.#...#.#.#.#.....#...#.....#.......#...#.#.......#.#.#.#.#...#...#.#...#...#...#.#...#.#...#.#.#.# #
  ###.#######.#####.###.#.#.#######.###.###.#######.###.#.#.#.#######.#.#.#.###.#.###.#.#####.#####.#.#.#.#####.#.#.# #
  #.......#.................#.....#.#.#.#.....#.....#.#.#...#.......#.......#.#...#.......#.....#...#.#.......#.#.#.# #
  #.#.#############.###.#.#.#.#.#.###.#.#.#####.#.###.###.#.#.#.#####.###.#.#.#.###.#####.###.###.#####.#.###.#.###.# #
  #.#.........#...#...#.#.#...#.#...#.#.#.....#.#.....#...#.#.#.#...#.#...#.#.......#...#.#.....#...#...#...#.#.#...# #
  #.###.#######.#.#.###############.#.#.#.#.#######.#######.#.###.#######.#####.#.###.#################.#########.#.# #
  #.#.....#.....#.#.#...#...#.............#.#.........#.....#.....#.........#.#.#.....#.#.......#.......#.#.#.#.#.#.# #
  ###.###########.#####.###.###.#.#.#.###########.#.#######.###.#.###.#.#####.###.#.###.#####.#.#######.#.#.#.#.##### #
  #.......#...#.#...#.....#.#...#.#.#...#.....#...#.....#...#...#.#...#...#...#.#.#.#.#...#...#.#.....#...#.#.....#.# #
  #.#.#######.#.#.#######.#.#######.#.#.#.#.#.#.###.#######.#.###########.#.###.#.###.#.#####.###.#.#.###.#.#.#.###.# #
  #.#.....#.......#...#.#...#.#.#...#.#...#.#.#.#.....#...#.#.....#.#.........#...#.....#.....#.#.#.#.#.......#.....# #
  #.#.###.#######.#.###.###.#.#.###########.#####.#####.###.###.#.#.#.#####.###.#####.#######.#.#.#######.#####.###.# #
  #.#...#.....#.......#...........#.#.....#.#.......#...#...#...#.#.......#.#.......#.#.#.#...#...#.#...#.#...#.#...# #
  #.#####.#######.###.#.#.###.###.#.###.#.#.#.###.###.#.#.###.#########.#.#######.###.#.#.###.#.###.#.#####.#####.#.# #
  #.#.......#.....#.....#.#...#.........#...#...#.#.#.#.#...#.......#...#.......#.....#.#.......#...#.#.#...#...#.#.# #
  #.#########.#.#.#############.#.###.#####.###.#.#.#.#.#.#.#####.#######.#.#####.#.#.#.#.###.#.###.#.#.###.#.#####.# #
  #.#.#.#.....#.#...#.....#.....#.#.......#.#...#.#...#...#.#.........#...#.#...#.#.#...#...#.#...........#.......#.# #
  ###.#.#########.###.#####.###.#####.###.###.#######.#############.#####.###.#.#.#####.#.#.###.#######.###.#.###.### #
  #...............#.........#...#.....#...#.......#...........#.....#.....#...#.......#...#...#.....#.......#...#...# #
  #####################################.#########.#####.#########.#####.#####.####################################### #
                                       X         E     A         M     L     G                                        #
                                       Z         C     L         P     J     K                                        #"

getPortal : Input -> Tile -> (Nat, Nat)
getPortal i t =
  Input.ps i
    |> Map.lookup t
    |> Optional.orDefault []
    |> day16.head
    |> Optional.orDefault (0, 0)

start : Input -> (Nat, Nat)
start i = startP |> getPortal i

end : Input -> (Nat, Nat)
end i = endP |> getPortal i

neighbors : Input -> (Nat, Nat) -> [(Nat, Nat)]
neighbors i p = case p of (x, y) ->
  moves =
    [(+0, +1), (+0, -1), (+1, +0), (-1, +0)]
      |> List.map (day17.add p)
      |> day16.filter (w -> not ((Input.lab i |> Map.lookup w) == Some W))
  tp = case Input.lab i |> Map.lookup p of
    Some P l ->
      Input.ps i
        |> Map.lookup (P l)
        |> Optional.orDefault []
        |> day16.filter (xy -> not (p == xy))
        |> day16.head
    _ -> None
  day6.flatten [tp] ++ moves

bfs : (Nat, Nat) -> ((Nat, Nat) -> [(Nat, Nat)]) -> (Nat, Nat) -> Optional ((Nat, Nat), Nat)
bfs start f end =
  go visited toVisit =
    neighbors = List.flatMap ( p -> case p of (n, d) ->
      f n |> List.map (p -> (p, (d + 1)))) (Map.toList toVisit)
    nVisited = Map.union visited toVisit

    case Map.lookup end toVisit of
      Some d -> Some ((end, d))
      _ ->
        nToVisit = day16.filter (p -> case p of (n, d) -> not (Map.contains n visited)) neighbors
        case nToVisit of
          [] -> None
          _ -> go nVisited (Map.fromList nToVisit)
  go Map.empty (Map.insert start 0 Map.empty)

walk : Input -> Optional ((Nat, Nat), Nat)
walk i = bfs (start i) (neighbors i) (end i)

use test.v1

test> tests.day20.walk.ex1 = run ( expect ( "         A###########
         A###########
  #######.###########
  #######.........###
  #######.#######.###
  #######.#######.###
  #######.#######.###
  #####  B    ###.###
BC...##  C    ###.###
  ##.##       ###.###
  ##...DE  F  ###.###
  #####    G  ###.###
  #########.#####.###
DE..#######...###.###
  #.#########.###.###
FG..#########.....###
  ###########.#######
             Z#######
             Z       " |> Text.toCharList |> parseInput |> walk == Some((13, 16), 23) ))

test> tests.day20.walk.ex2 = run ( expect ( "                   A              #
                   A              #
  #################.############# #
  #.#...#...................#.#.# #
  #.#.#.###.###.###.#########.#.# #
  #.#.#.......#...#.....#.#.#...# #
  #.#########.###.#####.#.#.###.# #
  #.............#.#.....#.......# #
  ###.###########.###.#####.#.#.# #
  #.....#        A   C    #.#.#.# #
  #######        S   P    #####.# #
  #.#...#                 #......VT
  #.#.#.#                 #.##### #
  #...#.#               YN....#.# #
  #.###.#                 #####.# #
DI....#.#                 #.....# #
  #####.#                 #.###.# #
ZZ......#               QG....#..AS
  ###.###                 ####### #
JO..#.#.#                 #.....# #
  #.#.#.#                 ###.#.# #
  #...#..DI             BU....#..LF
  #####.#                 #.##### #
YN......#               VT..#....QG
  #.###.#                 #.###.# #
  #.#...#                 #.....# #
  ###.###    J L     J    #.#.### #
  #.....#    O F     P    #.#...# #
  #.###.#####.#.#####.#####.###.# #
  #...#.#.#...#.....#.....#.#...# #
  #.#####.###.###.#.#.#########.# #
  #...#.#.....#...#.#.#.#.....#.# #
  #.###.#####.###.###.#.#.####### #
  #.#.........#...#.............# #
  #########.###.###.############# #
           B   J   C              #
           U   P   P              #" |> Text.toCharList |> parseInput |> walk == Some ((2, 17), 58) ))

type Input = { ps : Map Tile [(Nat, Nat)], lab : Map (Nat, Nat) Tile }

isUpperChar : Char -> Boolean
isUpperChar c =
  n = Char.toNat c
  n >= 65 && (n <= 90)

at : Nat -> Nat -> Nat -> (Int, Int) -> Nat
at i j w off = case off of (offX, offY) ->
  if (Nat.toInt i + offX) < +0 || ((Nat.toInt j + offY) < +0) then Nat.maxNat
  else ((abs (Nat.toInt j + offY)) * w + (abs (Nat.toInt i + offX)))

getChar : Nat -> Nat -> Nat -> [Char] -> [(Int, Int)] -> Optional (Nat, Char)
getChar i j w cs os =
  os
    |> List.map (at i j w)
    |> List.map (v -> List.at v cs |> Optional.map (c -> (v, c)))
    |> day6.flatten
    |> day16.filter (p -> Tuple.at2 p |> isUpperChar)
    |> day16.head

parsePortal : Nat -> Nat -> Nat -> [Char] -> Optional Tile
parsePortal i j w cs =
  p1 = getChar i j w cs [(+0, +1), (+0, -1), (+1, +0), (-1, +0)]
  p2 = getChar i j w cs [(+0, +2), (+0, -2), (+2, +0), (-2, +0)]
  case (p1, p2) of
    (Some (i1, c1), Some (i2, c2)) ->
      if i1 < i2 then [c1, c2] |> Text.fromCharList |> P |> Some
      else [c2, c1] |> Text.fromCharList |> P |> Some
    _ -> None

parseInput : [Char] -> Input
parseInput cs =
  w = day17.width cs
  go ps i j s = case ps of
    h +: t -> case h of
      ?\n -> go t 0 (j + 1) s
      ?. ->
        case parsePortal i j w cs of
          Some p ->
            Input.lab.modify (Map.insert (i, j) p) s
              |> Input.ps.modify (ps -> Map.insert p ((i, j) +: (Map.lookup p ps |> Optional.orDefault [])) ps)
              |> go t (i + 1) j
          None -> Input.lab.modify (Map.insert (i, j) O) s |> go t (i + 1) j
      _ -> Input.lab.modify (Map.insert (i, j) W) s |> go t (i + 1) j
    _ -> s
  go cs 0 0 (Input.Input Map.empty Map.empty)


unique type Tile = O | W | P Text

startP : Tile
startP = P "AA"
endP : Tile
endP = P "ZZ"
